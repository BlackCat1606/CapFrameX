<UserControl x:Class="CapFrameX.View.OverlayView"
			 x:Name="OverlayViewControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:CapFrameX.View"
			 xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
			 xmlns:dragdrop="urn:gong-wpf-dragdrop"
			 xmlns:mvvm="clr-namespace:CapFrameX.MVVM.Converter;assembly=CapFrameX.MVVM"
			 xmlns:validation ="clr-namespace:CapFrameX.MVVM.Validation;assembly=CapFrameX.MVVM"
			 xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
			 xmlns:prism="http://prismlibrary.com/"
             mc:Ignorable="d" 
             d:DesignHeight="1000" d:DesignWidth="1200"
			 Background="{DynamicResource MaterialDesignPaper}"
             FontFamily="{StaticResource MaterialDesignFont}"
			 prism:ViewModelLocator.AutoWireViewModel="True">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.DataGrid.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Slider.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.GridSplitter.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Flipper.xaml" />
            </ResourceDictionary.MergedDictionaries>
			<mvvm:BoolToVisibilityConverter x:Key="FalseToVisibleConverter" TrueValue="Collapsed" FalseValue="Visible"/>
			<mvvm:BoolToVisibilityConverter x:Key="FalseToCollapsedConverter" TrueValue="Visible" FalseValue="Collapsed"/>
            <mvvm:BoolToVisibilityConverter x:Key="TrueToVisibleConverter" FalseValue="Collapsed" TrueValue="Visible"/>
            <mvvm:EnumDescriptionConverter x:Key="EnumDescriptionConverter"/>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid HorizontalAlignment="Center">
        <Grid.RowDefinitions>
            <RowDefinition Height="50"></RowDefinition>
            <RowDefinition Height="380"></RowDefinition>
			<RowDefinition Height="100"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="450"/>
            <ColumnDefinition Width="450"/>
        </Grid.ColumnDefinitions>
        <DockPanel Grid.Row="1" Grid.Column="0" Margin="0 0 10 0">
            <!--DataGrid and Overlay hotkey-->
            <TextBlock Margin="0 0 0 10" DockPanel.Dock="Top" HorizontalAlignment="Center" Text="Overlay items" FontSize="14"/>
            <StackPanel DockPanel.Dock="Top" Orientation="Vertical" HorizontalAlignment="Center">
				<DataGrid x:Name="OverlayItemDataGrid" Height="280" Width="400" Background="#F5F5F5" FontSize="11"
						  MouseLeave="OverlayItemDataGrid_MouseLeave"
					      SelectedIndex="{Binding SelectedOverlayEntryIndex}" ItemsSource="{Binding OverlayEntries}"
					      CanUserSortColumns="False" CanUserAddRows="False" AutoGenerateColumns="False"
					      materialDesign:DataGridAssist.CellPadding="13 8 8 8" materialDesign:DataGridAssist.ColumnHeaderPadding="8" IsSynchronizedWithCurrentItem="False"
					      ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Visible" ScrollViewer.CanContentScroll="True"
					      dragdrop:DragDrop.IsDragSource="True"
					      dragdrop:DragDrop.IsDropTarget="True"
						  dragdrop:DragDrop.DropHandler="{Binding}"
					      dragdrop:DragDrop.UseDefaultDragAdorner="True"
					      dragdrop:DragDrop.DefaultDragAdornerOpacity="0.5"
					      dragdrop:DragDrop.UseDefaultEffectDataTemplate="False">
					<DataGrid.Columns>
						<DataGridCheckBoxColumn Binding="{Binding ShowOnOverlay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                Header="OSD">
							<DataGridCheckBoxColumn.CellStyle>
								<Style TargetType="DataGridCell">
									<Setter Property="IsEnabled" 
                                        Value="{Binding Path=ShowOnOverlayIsEnabled}" />
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate TargetType="{x:Type DataGridCell}">
												<Grid Background="{TemplateBinding Background}">
													<ContentPresenter VerticalAlignment="Center" />
												</Grid>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
									<Style.Triggers>
										<Trigger Property="DataGridCell.IsSelected" Value="True">
											<Setter Property="Background" Value="#DCDCDC" />
										</Trigger>
									</Style.Triggers>
								</Style>
								
							</DataGridCheckBoxColumn.CellStyle>
						</DataGridCheckBoxColumn>
						<DataGridTextColumn Binding="{Binding Description, Mode=TwoWay}"
                                            Header="Description"
                                            IsReadOnly="True"/>
						<DataGridTextColumn Binding="{Binding GroupName, Mode=TwoWay}"
                                            Header="Group name"
                                            IsReadOnly="False"/>
						<DataGridCheckBoxColumn Binding="{Binding ShowGraph, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            Header="Graph">
							<DataGridCheckBoxColumn.CellStyle>
								<Style TargetType="DataGridCell">
									<Setter Property="IsEnabled" 
                                        Value="{Binding Path=ShowGraphIsEnabled}" />
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate TargetType="{x:Type DataGridCell}">
												<Grid Background="{TemplateBinding Background}">
													<ContentPresenter VerticalAlignment="Center" />
												</Grid>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
									<Style.Triggers>
										<Trigger Property="DataGridCell.IsSelected" Value="True">
											<Setter Property="Background" Value="#DCDCDC" />
										</Trigger>
									</Style.Triggers>
								</Style>
							</DataGridCheckBoxColumn.CellStyle>
						</DataGridCheckBoxColumn>
						<!--<DataGridTextColumn Binding="{Binding Color, Mode=TwoWay}"
										    Width="100"
                                            Header="Hex-color"
                                            IsReadOnly="False"/>-->
					</DataGrid.Columns>
                </DataGrid>
                <TextBlock HorizontalAlignment="Center" Text="Drag &amp; Drop to change order"/>
            </StackPanel>
			<TextBox Margin="0 20 200 -20" DockPanel.Dock="Bottom" HorizontalAlignment="Center"
                     Width="132" wpf:HintAssist.Hint="Overlay hotkey" Style="{DynamicResource MaterialDesignFloatingHintTextBox}" FontSize="14"
					 IsReadOnly="True" IsReadOnlyCaretVisible="False" IsUndoEnabled="False" PreviewKeyDown="OverlayHotkeyTextBox_PreviewKeyDown"
					 ToolTip="combinable with Ctrl/Shift/Alt" IsEnabled="{Binding IsRTSSInstalled}">
				<Binding Path="OverlayHotkey"
						 ElementName="OverlayViewControl"
						 Mode="OneWay"
						 TargetNullValue="&lt; not set &gt;">
					<Binding.ValidationRules>
						<validation:HotkeyValidationRule
                          ValidatesOnTargetUpdated="True" />
					</Binding.ValidationRules>
				</Binding>
			</TextBox>
			<ComboBox DockPanel.Dock="Bottom" Margin="200 0 0 -96"
					  materialDesign:HintAssist.Hint="Refresh period (ms)" HorizontalAlignment="Center"
					  materialDesign:HintAssist.IsFloating="True" MaxDropDownHeight="200" Width="132"
					  MouseLeave="OSDRefreshPeriodComboBox_MouseLeave" FontSize="14"
					  ItemsSource="{Binding Path=RefreshPeriodItemsSource}">
				<ComboBox.Text>
					<Binding Path="OSDRefreshPeriod"
							 Mode="TwoWay"
							 UpdateSourceTrigger="PropertyChanged">
					</Binding>
				</ComboBox.Text>
			</ComboBox>
		</DockPanel>
		<Border Grid.Row="1" Grid.Column="1" Margin="0 0 0 -20" Background="Transparent" BorderThickness=".2" BorderBrush="Black">
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="60"></RowDefinition>
					<RowDefinition Height="140"></RowDefinition>
					<RowDefinition Height="100"></RowDefinition>
					<RowDefinition Height="80"></RowDefinition>
				</Grid.RowDefinitions>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="1*"/>
					<ColumnDefinition Width="1*"/>
				</Grid.ColumnDefinitions>
				<!--Global history toogle-->
				<StackPanel Grid.Row="0" Grid.ColumnSpan="2" HorizontalAlignment="Center" VerticalAlignment="Bottom" Orientation="Vertical">
					<TextBlock Text="Run history" Margin="5"/>
					<ToggleButton IsChecked="{Binding UseRunHistory}" Style="{StaticResource MaterialDesignSwitchToggleButton}" 
								  ToolTipService.ShowDuration="25000">
						<ToggleButton.ToolTip>
							<ToolTip MaxWidth="250">
								<TextBlock Text="Saves a set number of runs into a history which can be displayed in the overlay"                               
										   TextWrapping="Wrap"/>
							</ToolTip>
						</ToggleButton.ToolTip>
					</ToggleButton>
				</StackPanel>
				<!--Run controls-->
				<Grid Grid.Row="1" Grid.ColumnSpan="2" HorizontalAlignment="Center"
                  IsEnabled="{Binding UseRunHistory}">
					<Grid.RowDefinitions>
						<RowDefinition Height="1*"></RowDefinition>
						<RowDefinition Height="1*"></RowDefinition>
					</Grid.RowDefinitions>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="225"/>
						<ColumnDefinition Width="225"/>
					</Grid.ColumnDefinitions>
					<ComboBox Grid.Row="0" Grid.Column="0" materialDesign:HintAssist.Hint="Number of runs" VerticalAlignment="Bottom"
					  materialDesign:HintAssist.IsFloating="True" MaxDropDownHeight="100" Width="120"
					  ItemsSource="{Binding Path=NumberOfRunsItemsSource}" ToolTipService.ShowDuration="25000">
						<ComboBox.ToolTip>
							<ToolTip StaysOpen="True" MaxWidth="275">
								<TextBlock Text="The number of runs written into the history.
											Any additional run will replace the oldest one." 
										   TextWrapping="Wrap"/>
							</ToolTip>
						</ComboBox.ToolTip>
						<ComboBox.Text>
							<Binding Path="SelectedNumberOfRuns"
							Mode="TwoWay"
							UpdateSourceTrigger="PropertyChanged">
							</Binding>
						</ComboBox.Text>
					</ComboBox>
					<!--Reset run history hotkey-->
					<TextBox Grid.Row="0" Grid.Column="1" Width="120" wpf:HintAssist.Hint="Reset run history hotkey" Style="{DynamicResource MaterialDesignFloatingHintTextBox}" FontSize="14"
					 IsReadOnly="True" IsReadOnlyCaretVisible="False" IsUndoEnabled="False" PreviewKeyDown="ResetHistoryHotkeyTextBox_PreviewKeyDown"
					 ToolTip="combinable with Ctrl/Shift/Alt">
						<Binding Path="ResetHistoryHotkey"
						 ElementName="OverlayViewControl"
						 Mode="OneWay"
						 TargetNullValue="&lt; not set &gt;">
							<Binding.ValidationRules>
								<validation:HotkeyValidationRule
                          ValidatesOnTargetUpdated="True" />
							</Binding.ValidationRules>
						</Binding>
					</TextBox>
					<!--Metrics shown on overlay-->
					<ComboBox  Grid.Row="1" Grid.Column="0" Width="120" materialDesign:HintAssist.Hint="Second metric"
					  Visibility="{Binding IsBarChartTabActive, Converter={StaticResource TrueToVisibleConverter}}"
					  materialDesign:HintAssist.IsFloating="True" MaxDropDownHeight="330" materialDesign:ComboBoxAssist.ClassicMode="True"
					  ItemsSource="{Binding SecondMetricItems}" SelectedItem="{Binding SelectedSecondMetric}">
						<ComboBox.ItemTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding Converter={StaticResource EnumDescriptionConverter}}"/>
							</DataTemplate>
						</ComboBox.ItemTemplate>
					</ComboBox>
					<ComboBox Grid.Row="1" Grid.Column="1" Width="120" materialDesign:HintAssist.Hint="Third metric"
					  Visibility="{Binding IsBarChartTabActive, Converter={StaticResource TrueToVisibleConverter}}"
					  materialDesign:HintAssist.IsFloating="True" MaxDropDownHeight="360" materialDesign:ComboBoxAssist.ClassicMode="True"
					  ItemsSource="{Binding ThirdMetricItems}" SelectedItem="{Binding SelectedThirdMetric}">
						<ComboBox.ItemTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding Converter={StaticResource EnumDescriptionConverter}}"/>
							</DataTemplate>
						</ComboBox.ItemTemplate>
					</ComboBox>
				</Grid>
				<!--Aggregation of run history toogle-->
				<StackPanel Grid.Row="2" Grid.ColumnSpan="2" HorizontalAlignment="Center" VerticalAlignment="Bottom">
					<TextBlock Text="Aggregation of run history" Margin="5"/>
					<ToggleButton IsChecked="{Binding UseAggregation}" Style="{StaticResource MaterialDesignSwitchToggleButton}" IsEnabled="{Binding UseRunHistory}" 
                                  ToolTipService.ShowDuration="25000">
						<ToggleButton.ToolTip>
							<ToolTip MaxWidth="350">
								<TextBlock 
                             Text="Once the run history is full, combines the frametime data of a set number of runs to a single record file.                                   
                                This is NOT the same as calculating averave parameters from multiple single record files. It simulates running the same scene multiple times in one single benchmark. 
                                Performance parameters are calculated using all of the frametime data." 
                             TextWrapping="Wrap"/>
							</ToolTip>
						</ToggleButton.ToolTip>
					</ToggleButton>
				</StackPanel>
				<Grid Grid.Row="3" Grid.ColumnSpan="2" HorizontalAlignment="Center"
                  IsEnabled="{Binding UseAggregation}">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="225"/>
						<ColumnDefinition Width="225"/>
					</Grid.ColumnDefinitions>
					<ComboBox Grid.Column="0" VerticalAlignment="Bottom" materialDesign:HintAssist.Hint="Aggregation mode"
					  materialDesign:HintAssist.IsFloating="True" MaxDropDownHeight="100" Width="120"
					  ItemsSource="{Binding AggregationModeItems}" SelectedItem="{Binding SelectedAggregationMode}" 
                              ToolTipService.ShowDuration="25000">
						<ComboBox.ToolTip>
							<ToolTip MaxWidth="350">
                                <TextBlock
                             Text="Ignore outliers&#10;If a run is x% slower than the median of all runs, it will be ignored for aggregation.
                                   
                                   &#10;&#10;Repeat outliers&#10;If a run is x% slower than the median of all runs, 
                                   it will be marked red and you can do another run to replace it before the runs are being aggregated.
                                    
                                   &#10;&#10;Include outliers&#10;Use all runs in the history for aggregation regardless of outliers" 
                             TextWrapping="Wrap"/>
							</ToolTip>
						</ComboBox.ToolTip>
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Converter={StaticResource EnumDescriptionConverter}}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <ComboBox Margin="15 0 0 0" Grid.Column="1" VerticalAlignment="Bottom" materialDesign:HintAssist.Hint="Outlier percentage"
					  materialDesign:HintAssist.IsFloating="True" MaxDropDownHeight="100" Width="120"
					  ItemsSource="{Binding OutlierPercentageItemsSource}" SelectedItem="{Binding SelectedOutlierPercentage}" 
                              ToolTipService.ShowDuration="25000">
                        <ComboBox.ToolTip>
                            <ToolTip MaxWidth="350">
                                <TextBlock
                             Text="Percentage a run has to differ from the median before it is seen as outlier" 
                             TextWrapping="Wrap"/>
                            </ToolTip>
                        </ComboBox.ToolTip>
                    </ComboBox>
                </Grid>
			</Grid>
		</Border>

		<TextBlock Margin="0 40 0 0" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="2" HorizontalAlignment="Center" VerticalAlignment="Center"
				   Visibility="{Binding IsRTSSInstalled, Converter={StaticResource FalseToVisibleConverter}}">           
			<Hyperlink NavigateUri="https://www.guru3d.com/files-details/rtss-rivatuner-statistics-server-download.html" 
					   RequestNavigate="Hyperlink_RequestNavigate">
				<TextBlock Text="{Binding Path=UpdateHpyerlinkText}"/>
			</Hyperlink>	
		</TextBlock>
	</Grid>
</UserControl>
