<UserControl x:Class="CapFrameX.View.ComparisonView"
			 Name="ComparisonViewUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:local="clr-namespace:CapFrameX.View"
             xmlns:vm="clr-namespace:CapFrameX.ViewModel;assembly=CapFrameX.ViewModel"
             xmlns:mvvm="clr-namespace:CapFrameX.MVVM.Converter;assembly=CapFrameX.MVVM"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
             xmlns:oxy="clr-namespace:OxyPlot.Wpf;assembly=OxyPlot.Wpf"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:dragdrop="urn:gong-wpf-dragdrop"
             mc:Ignorable="d"
             Background="{DynamicResource MaterialDesignPaper}"
             FontFamily="{StaticResource MaterialDesignFont}"
             d:DesignHeight="450" d:DesignWidth="800"
             prism:ViewModelLocator.AutoWireViewModel="True">
	<UserControl.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
				<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
				<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
				<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.DataGrid.xaml" />
				<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Slider.xaml" />
				<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PopupBox.xaml" />
			</ResourceDictionary.MergedDictionaries>
			<mvvm:ZoomingModeConverter x:Key="ZoomingModeConverter"/>
			<mvvm:EnumDescriptionConverter x:Key="EnumDescriptionConverter"/>
			<mvvm:BoolToVisibilityConverter x:Key="FalseToHiddenConverter" FalseValue="Hidden" TrueValue="Visible"/>
			<mvvm:BoolToVisibilityConverter x:Key="FalseToCollapsedConverter" FalseValue="Collapsed" TrueValue="Visible"/>
			<mvvm:BoolToVisibilityConverter x:Key="TrueToVisibleConverter" FalseValue="Visible" TrueValue="Collapsed"/>
			<mvvm:AddValueConverter x:Key="AddValueConverter" Offset="-100"/>
		</ResourceDictionary>
	</UserControl.Resources>
	<Grid x:Name="ComparisonAreaGrid">
		<Grid.RowDefinitions>
			<RowDefinition Height="1*"></RowDefinition>
			<RowDefinition Height="70"></RowDefinition>
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="1*"></ColumnDefinition>
			<ColumnDefinition Width="320"></ColumnDefinition>
		</Grid.ColumnDefinitions>
		<TabControl Margin="5 10 0 0" Grid.Row="0" Grid.Column="0" Background="#F5F5F5"
					SelectedItem="{Binding SelectedChartItem}">
			<TabItem Header="Bar charts" >
				<ScrollViewer VerticalScrollBarVisibility="Auto">
					<lvc:CartesianChart Margin="10" VerticalAlignment="Top" Series="{Binding ComparisonRowChartSeriesCollection}" Height="{Binding BarChartHeight}"
                                        Visibility="{Binding BarChartVisibility, Converter={StaticResource FalseToCollapsedConverter}}" DisableAnimations="True"
										Hoverable="False" DataTooltip="{x:Null}" LegendLocation="Top">
						<lvc:CartesianChart.AxisX>
							<lvc:Axis Title="FPS" FontSize="11" MinValue="0" LabelFormatter="{Binding ComparisonColumnChartFormatter}" Foreground="Black"></lvc:Axis>
						</lvc:CartesianChart.AxisX>
						<lvc:CartesianChart.AxisY>
							<lvc:Axis Labels="{Binding ComparisonRowChartLabels}">
								<lvc:Axis.Separator>
									<!--step 1 forces the axis to display all labels, disabling it makes it invisible-->
									<lvc:Separator Step="1" IsEnabled="False"></lvc:Separator>
								</lvc:Axis.Separator>
							</lvc:Axis>
						</lvc:CartesianChart.AxisY>
					</lvc:CartesianChart>
				</ScrollViewer>
			</TabItem>
			<TabItem Header="Frametimes/ L-shapes">
				<Grid Name="ChartAndCuttingGrid">
					<Grid.RowDefinitions>
						<RowDefinition Height="1*"></RowDefinition>
						<RowDefinition Height="Auto"></RowDefinition>
					</Grid.RowDefinitions>
					<Grid Grid.Row="0" Background="#F5F5F5">
						<oxy:PlotView Background="#F5F5F5" x:Name="ComparisonPlotView" Model="{Binding ComparisonModel}" MouseDoubleClick="ResetChart_MouseDoubleClick"/>
					</Grid>
					<Grid Grid.Row="1" Visibility="{Binding ElementName=CuttingModeActiveToggleButton, Path=IsChecked, Converter={StaticResource FalseToCollapsedConverter}}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="2*" />
							<ColumnDefinition Width="1*" />
							<ColumnDefinition Width="2*" />
						</Grid.ColumnDefinitions>
						<Slider Grid.Column="0" Margin="20 0 0 10" Minimum="0"
								Maximum="{Binding CutLeftSliderMaximum}"
								TickFrequency="0.1"
								HorizontalAlignment="Stretch"
								VerticalAlignment="Bottom"
								Value="{Binding FirstSeconds}"
								Style="{StaticResource MaterialDesignDiscreteSlider}"
								ToolTip="Cut first seconds"/>
						<TextBox Grid.Column="1" HorizontalAlignment="Center" IsReadOnly="True" Margin="20 0 20 3"
								 Style="{StaticResource MaterialDesignFloatingHintTextBox}" Text="{Binding RemainingRecordingTime}">
							<materialDesign:HintAssist.Hint>
								<StackPanel Orientation="Horizontal" Margin="-2 0 0 0">
									<materialDesign:PackIcon Kind="ChartLine" />
									<TextBlock Margin="3 0 0 0">
										remaining recording time
									</TextBlock>
								</StackPanel>
							</materialDesign:HintAssist.Hint>
						</TextBox>
						<Slider Grid.Column="2" Margin="0 0 10 10" Minimum="0"
								IsDirectionReversed="True"
								Maximum="{Binding CutRightSliderMaximum}"
								TickFrequency="0.1"
								HorizontalAlignment="Stretch"
								VerticalAlignment="Bottom"
								Value="{Binding LastSeconds}"
								Style="{StaticResource MaterialDesignDiscreteSlider}"
								ToolTip="Cut last seconds"/>
					</Grid>
				</Grid>
			</TabItem>
		</TabControl>
		<Grid Grid.Row="1" Margin="5 5 0 5" Background="#e6e6e6">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto"></ColumnDefinition>
				<ColumnDefinition Width="180"></ColumnDefinition>
			</Grid.ColumnDefinitions>
			<StackPanel VerticalAlignment="Center" Grid.Column="0" Margin="25 3 0 0" Orientation="Horizontal">
				<TextBlock VerticalAlignment="Center">Sort mode:</TextBlock>
				<ToggleButton Grid.Column="0" Margin="5 0 0 0" Foreground="Black" BorderThickness="1" Background="Transparent"
							  Style="{StaticResource MaterialDesignActionAccentToggleButton}" IsChecked="{Binding IsSortModeAscendingActive}">
					<ToggleButton.Content>
						<materialDesign:PackIcon Kind="SortDescending" />
					</ToggleButton.Content>
					<materialDesign:ToggleButtonAssist.OnContent>
						<materialDesign:PackIcon Kind="SortAscending" />
					</materialDesign:ToggleButtonAssist.OnContent >
				</ToggleButton>
			</StackPanel>
			<ComboBox Grid.Column="1" VerticalAlignment="Center" Margin="20 0 0 15" materialDesign:HintAssist.Hint="Secondary metric"
					materialDesign:HintAssist.IsFloating="True" MaxDropDownHeight="150"
					ItemsSource="{Binding MetricItems}" SelectedItem="{Binding SelectSecondaryMetric}">
				<ComboBox.ItemTemplate>
					<DataTemplate>
						<TextBlock Text="{Binding Converter={StaticResource EnumDescriptionConverter}}"/>
					</DataTemplate>
				</ComboBox.ItemTemplate>
			</ComboBox>
		</Grid>
		<StackPanel Margin="5 10 5 0" Grid.Row="0" Grid.RowSpan="2" Grid.Column="1" Orientation="Vertical">
			<TextBox IsReadOnly="True" Background="#e6e6e6" materialDesign:HintAssist.Hint="Comparisons" />
			<Border Margin="0 5 0 0" BorderThickness="1" BorderBrush="#CCC" VerticalAlignment="Stretch">
				<Grid Background="#e6e6e6">
					<Grid.RowDefinitions>
						<RowDefinition Height="40"></RowDefinition>
						<RowDefinition Height="Auto"></RowDefinition>
						<RowDefinition Height="1*"></RowDefinition>
					</Grid.RowDefinitions>
					<Grid Grid.Row="0">
						<StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
							<materialDesign:PopupBox StaysOpen="True"
													 VerticalAlignment="Center"												 
													 Width="30" Height="30"
													 ToggleContent="{materialDesign:PackIcon BallotOutline, Size=24}"
													 Margin="10 0 0 0"
													 PlacementMode="BottomAndAlignCentres"
													 ToolTip="Set comparison context">
								<materialDesign:PopupBox.ToggleCheckedContent>
									<materialDesign:PackIcon Kind="Pencil" Width="24" Height="24" />
								</materialDesign:PopupBox.ToggleCheckedContent>
								<StackPanel>
									<Button Command="{Binding DateTimeContextCommand}" Content="{materialDesign:PackIcon TimeTable, Size=24}" ToolTip="Date and time"/>
									<Button Command="{Binding CpuContextCommand}" ToolTip="CPU">
										CPU
									</Button>
									<Button Command="{Binding GpuContextCommand}" ToolTip="GPU">
										GPU
									</Button>
									<Button Command="{Binding CustomContextCommand}" Content="{materialDesign:PackIcon CommentUser, Size=24}" ToolTip="Custom comments"/>
								</StackPanel>
							</materialDesign:PopupBox>
						</StackPanel>
						<Button Style="{StaticResource MaterialDesignFloatingActionMiniButton}"
								Margin="0 0 10 0"
								HorizontalAlignment="Right"
								Width="30" Height="30"
								ToolTip="Remove all comparisons"
								Command="{Binding RemoveAllComparisonsCommand}">
							<materialDesign:PackIcon Kind="PlaylistRemove" Height="24" Width="24" />
						</Button>
					</Grid>
					<Separator Grid.Row="1" Margin="5 0 5 0" Style="{StaticResource MaterialDesignDarkSeparator}"/>
					<Grid Grid.Row="2">
						<Border VerticalAlignment="Center" HorizontalAlignment="Center">
							<Image Grid.Row="0" Visibility="{Binding InitialIconVisibility, Converter={StaticResource FalseToCollapsedConverter}}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
									   Name="ComparisonImage"
									   dragdrop:DragDrop.IsDropTarget="True"
									   dragdrop:DragDrop.DropHandler="{Binding}"
									   dragdrop:DragDrop.UseDefaultDragAdorner="True"
									   dragdrop:DragDrop.DropTargetAdornerBrush="White"
									   dragdrop:DragDrop.DefaultDragAdornerOpacity="0.5"
									   dragdrop:DragDrop.UseDefaultEffectDataTemplate="False"
									   Source="/CapFrameX;component/Icons/CX_Icon.png"
									   Width="80" Height="80">
							</Image>
						</Border>
						<DockPanel Height="{Binding ElementName=ComparisonAreaGrid, Path=ActualHeight, Converter={StaticResource AddValueConverter}}">
							<ScrollViewer VerticalScrollBarVisibility="Auto" CanContentScroll="True">
								<ItemsControl ItemsSource="{Binding ComparisonRecords}" Background="#e6e6e6" 
										  Visibility="{Binding InitialIconVisibility, Converter={StaticResource TrueToVisibleConverter}}"
										  x:Name="ComparisonRecordItemControl"										  
										  dragdrop:DragDrop.IsDropTarget="True"
										  dragdrop:DragDrop.IsDragSource="True"
										  dragdrop:DragDrop.DropHandler="{Binding}"
										  dragdrop:DragDrop.UseDefaultDragAdorner="True"
										  dragdrop:DragDrop.DefaultDragAdornerOpacity="0.5"
										  dragdrop:DragDrop.UseDefaultEffectDataTemplate="False">
									<ItemsControl.ItemTemplate>
										<DataTemplate DataType="{x:Type vm:ComparisonRecordInfoWrapper}">
											<Grid>
												<i:Interaction.Triggers>
													<i:EventTrigger EventName="MouseEnter">
														<i:InvokeCommandAction Command="{Binding MouseEnterCommand}"/>
													</i:EventTrigger>
													<i:EventTrigger EventName="MouseLeave">
														<i:InvokeCommandAction Command="{Binding MouseLeaveCommand}"/>
													</i:EventTrigger>
												</i:Interaction.Triggers>
												<Border x:Name="Border"
													Padding="8"
													BorderThickness="0 0 0 1"
													BorderBrush="{DynamicResource MaterialDesignDivider}">
													<Grid>
														<Grid.RowDefinitions>
															<RowDefinition Height="18"/>
															<RowDefinition Height="1*"/>
														</Grid.RowDefinitions>
														<Grid.ColumnDefinitions>
															<ColumnDefinition Width="140"/>
															<ColumnDefinition Width="Auto"/>
															<ColumnDefinition Width="15"/>
														</Grid.ColumnDefinitions>
														<TextBlock Margin="3 0 0 0" Grid.Row="0"  Grid.Column="0" Grid.ColumnSpan="2" FontWeight="Bold" Text="{Binding WrappedRecordInfo.Game}" />
														<TextBlock Text="{Binding WrappedRecordInfo.InfoText}" TextWrapping="Wrap"
																   Width="140" Margin="3 0 0 0" Grid.Row="1" Grid.Column="0"
																   LineStackingStrategy="BlockLineHeight"
																   FontSize="12"
																   LineHeight="14"
																   MaxHeight="52"/>
														<xctk:ColorPicker Width="120" Height="30" Grid.Row="1" Grid.Column="1" Margin="0 10 0 0" Background="#e6e6e6" SelectedColor="{Binding FrametimeGraphColor}" 
																      SelectedColorChanged="SelectedColorChanged" DisplayColorAndName="True" AvailableColorsSortingMode="HueSaturationBrightness" 
																	  Visibility="{Binding ElementName=ComparisonRecordItemControl, Path=DataContext.ColorPickerVisibility, Converter={StaticResource FalseToHiddenConverter}}"/>
														<Button Grid.Row="0" Grid.Column="2" Margin="0 -2 -2 0" Padding="0" Width="12" Height="12" HorizontalAlignment="Right" VerticalAlignment="Top" BorderThickness="0" Background="Transparent" Foreground="Black"
															Content="{materialDesign:PackIcon Close, Size=12}" Command="{Binding RemoveCommand}">
														</Button>
													</Grid>
												</Border>
											</Grid>
											<DataTemplate.Triggers>
												<DataTrigger Binding="{Binding IsSelected}" Value="True">
													<Setter TargetName="Border"
														Property="Background"
														Value="{DynamicResource MaterialDesignSelection}" />
												</DataTrigger>
											</DataTemplate.Triggers>
										</DataTemplate>
									</ItemsControl.ItemTemplate>
								</ItemsControl>
							</ScrollViewer>
						</DockPanel>
					</Grid>
				</Grid>
			</Border>
		</StackPanel>
	</Grid>
</UserControl>
