<UserControl x:Class="CapFrameX.View.MainView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:geared="clr-namespace:LiveCharts.Geared;assembly=LiveCharts.Geared"
			 xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
			 xmlns:mvvm="clr-namespace:CapFrameX.MVVM.Converter;assembly=CapFrameX.MVVM"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="1025"
             Background="{DynamicResource MaterialDesignPaper}"
             FontFamily="{StaticResource MaterialDesignFont}"
             prism:ViewModelLocator.AutoWireViewModel="True">
	<UserControl.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
				<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
				<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
				<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.DataGrid.xaml" />
			</ResourceDictionary.MergedDictionaries>
			<mvvm:ZoomingModeConverter x:Key="ZoomingModeConverter"></mvvm:ZoomingModeConverter>
		</ResourceDictionary>
	</UserControl.Resources>
	<!--<materialDesign:DialogHost Identifier="RootDialog" SnackbarMessageQueue="{Binding ElementName=MainSnackbar, Path=MessageQueue}">-->
	<materialDesign:DrawerHost IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}">
		<materialDesign:DrawerHost.LeftDrawerContent>
			<DockPanel MinWidth="212">
				<ToggleButton Style="{StaticResource MaterialDesignHamburgerToggleButton}" 
                                    DockPanel.Dock="Top"
                                    HorizontalAlignment="Right" Margin="16"
                                    IsChecked="{Binding ElementName=MenuToggleButton, Path=IsChecked, Mode=TwoWay}" />
				<ListBox x:Name="DemoItemsListBox" Margin="0 16 0 16" SelectedIndex="0"                         
                             ItemsSource="{Binding DemoItems}"
                             PreviewMouseLeftButtonUp="UIElement_OnPreviewMouseLeftButtonUp">
					<ListBox.ItemTemplate>
						<DataTemplate DataType="domain:DemoItem">
							<TextBlock Text="{Binding Name}" Margin="32 0 32 0" />
						</DataTemplate>
					</ListBox.ItemTemplate>
				</ListBox>
			</DockPanel>
		</materialDesign:DrawerHost.LeftDrawerContent>
		<DockPanel>
			<materialDesign:ColorZone Padding="16" materialDesign:ShadowAssist.ShadowDepth="Depth2" Mode="PrimaryMid" DockPanel.Dock="Top">
				<DockPanel>
					<ToggleButton Style="{StaticResource MaterialDesignHamburgerToggleButton}" IsChecked="False" x:Name="MenuToggleButton"/>
					<materialDesign:PopupBox DockPanel.Dock="Right" PlacementMode="BottomAndAlignRightEdges" StaysOpen="False">
						<StackPanel>
							<Button Content="Hello World" Click="MenuPopupButton_OnClick"/>
							<Button Content="Nice Popup" Click="MenuPopupButton_OnClick"/>
							<Button Content="Can't Touch This" IsEnabled="False" />
							<Separator/>
							<Button Content="Goodbye" Click="MenuPopupButton_OnClick"/>
						</StackPanel>
					</materialDesign:PopupBox>
					<TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="22">CapFrameX</TextBlock>
				</DockPanel>
			</materialDesign:ColorZone>
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="*" />
				</Grid.RowDefinitions>
				<ScrollViewer Grid.Row="1" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="2*" />
						</Grid.ColumnDefinitions>
						<DataGrid Grid.Column="0" Margin="0 0 0 0" ItemsSource="{Binding RecordInfoList}" SelectedItem="{Binding SelectedRecordInfo}" CanUserSortColumns="True" CanUserAddRows="False" AutoGenerateColumns="False"
                          materialDesign:DataGridAssist.CellPadding="13 8 8 8" materialDesign:DataGridAssist.ColumnHeaderPadding="8">
							<DataGrid.Columns>
								<DataGridTextColumn Binding="{Binding GameName}"
                                        Header="Game"
                                        IsReadOnly="True"/>
								<DataGridTextColumn Binding="{Binding CreationDate}"
                                        Header="Date"
                                        IsReadOnly="True"/>
								<DataGridTextColumn Binding="{Binding RecordTime}"
                                        Header="Record time"
                                        IsReadOnly="True"/>
							</DataGrid.Columns>
						</DataGrid>
						<Grid Grid.Column="1">
							<Grid.RowDefinitions>
								<RowDefinition Height="*"></RowDefinition>
								<RowDefinition Height="Auto"></RowDefinition>
							</Grid.RowDefinitions>
							<lvc:CartesianChart Series="{Binding SeriesCollection}" Grid.Row="0" Zoom="{Binding ZoomingMode}" >
								<!--<lvc:CartesianChart.Series>
									--><!--Notice we are using GLineSeries, instead of LineSeries--><!--
									<geared:GLineSeries Values="{Binding FrametimeValues}" />
								</lvc:CartesianChart.Series>-->
								<lvc:CartesianChart.AxisX>
									<lvc:Axis Name="X" LabelFormatter="{Binding XFormatter}" Separator="{x:Static lvc:DefaultAxes.CleanSeparator}"/>
								</lvc:CartesianChart.AxisX>
								<lvc:CartesianChart.AxisY>
									<lvc:Axis Name="Y" LabelFormatter="{Binding YFormatter}"/>
								</lvc:CartesianChart.AxisY>
							</lvc:CartesianChart>
							<StackPanel Grid.Row="1">
								<Button Command="{Binding ToogleZoomingModeCommand}">
									<TextBlock>Toggle zoming mode, current is: 
										<TextBlock Text="{Binding ZoomingMode, Converter={StaticResource ZoomingModeConverter}}"/>
									</TextBlock>
								</Button>
								<Button Click="ResetZoomOnClick">Reset Zoom</Button>
							</StackPanel>
						</Grid>
					</Grid>
				</ScrollViewer>
			</Grid>
		</DockPanel>
	</materialDesign:DrawerHost>
	<!--</materialDesign:DialogHost>-->
</UserControl>
