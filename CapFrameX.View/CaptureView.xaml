<UserControl x:Class="CapFrameX.View.CaptureView"
			 x:Name="CaptureViewControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			 xmlns:mvvm="clr-namespace:CapFrameX.MVVM.Converter;assembly=CapFrameX.MVVM"
			 xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
			 xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
			 xmlns:prism="http://prismlibrary.com/"	
             xmlns:local="clr-namespace:CapFrameX.View"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
			 Background="{DynamicResource MaterialDesignPaper}"
             FontFamily="{StaticResource MaterialDesignFont}"
             prism:ViewModelLocator.AutoWireViewModel="True">
	<UserControl.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
				<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
				<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
				<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.DataGrid.xaml" />
				<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Slider.xaml" />
				<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.GridSplitter.xaml" />
				<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Flipper.xaml" />
			</ResourceDictionary.MergedDictionaries>
		</ResourceDictionary>
	</UserControl.Resources>
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="1*"></RowDefinition>
			<RowDefinition Height="3*"></RowDefinition>
			<RowDefinition Height="1*"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
        </Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="1*"></ColumnDefinition>
			<ColumnDefinition Width="2*" MaxWidth="280"></ColumnDefinition>
			<ColumnDefinition Width="100"></ColumnDefinition>
            <ColumnDefinition Width="2*" MaxWidth="280"></ColumnDefinition>
			<ColumnDefinition Width="1*"></ColumnDefinition>
		</Grid.ColumnDefinitions>
		<TextBlock Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="3" Margin="0 30 0 0" Text="{Binding CaptureStateInfo}" FontSize="14" Style="{StaticResource MaterialDesignCaptionTextBlock}" 
				   VerticalAlignment="Center" HorizontalAlignment="Center" />
		<StackPanel Margin="0 50 0 0" Grid.Row="1" Grid.Column="1" Orientation="Vertical" Width="240">
			<StackPanel Orientation="Horizontal">
				<TextBlock Style="{StaticResource MaterialDesignTitleTextBlock}">Process capture list</TextBlock>
				<Button Padding="0 0 0 4" Width="64" Height="24"  Foreground="Black" BorderThickness="0" Background="Transparent" VerticalAlignment="Top"
						HorizontalAlignment="Center" Command="{Binding ResetCaptureProcessCommand}" ToolTip="Reset selected process"
						IsEnabled="{Binding IsAddToIgnoreListButtonActive}">
					<materialDesign:PackIcon Kind="FilterRemove" Width="22" Height="22"/>
				</Button>
			</StackPanel>
			<ListView IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding ProcessesToCapture}" SelectedItem="{Binding SelectedProcessToCapture}"
					  ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True" Height="280" Width="200" HorizontalAlignment="Left"
					  IsEnabled="{Binding IsAddToIgnoreListButtonActive}">
			</ListView>
		</StackPanel>

		<Button Width="64" Height="64" Foreground="Black" BorderThickness="0" Background="Transparent" Grid.Row="1" Grid.Column="2" VerticalAlignment="Center"
				HorizontalAlignment="Center" Command="{Binding AddToIgonreListCommand}" IsEnabled="{Binding IsAddToIgnoreListButtonActive}">
			<Button.Triggers>
				<EventTrigger RoutedEvent="MouseEnter">
					<BeginStoryboard>
						<Storyboard>
							<ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="#e6e6e6"/>
						</Storyboard>
					</BeginStoryboard>
				</EventTrigger>
				<EventTrigger RoutedEvent="MouseLeave">
					<BeginStoryboard>
						<Storyboard>
							<ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="Transparent"/>
						</Storyboard>
					</BeginStoryboard>
				</EventTrigger>
			</Button.Triggers>
			<materialDesign:PackIcon Kind="ArrowRight" Width="32" Height="32"/>
		</Button>

		<StackPanel Margin="0 50 0 0" Grid.Row="1" Grid.Column="3" Orientation="Vertical" Width="200">
			<TextBlock Style="{StaticResource MaterialDesignTitleTextBlock}">Process ignore list</TextBlock>
			<ListView IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding ProcessesToIgnore}" SelectedItem="{Binding SelectedProcessToIgnore}"
					  ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True" Height="280"
					  Tag="{Binding ElementName=CaptureViewControl, Path=DataContext}">
				<ListView.ContextMenu>
					<ContextMenu DataContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
						<MenuItem Header="Remove from ignore list" Command="{Binding RemoveFromIgnoreListCommand}"/>
					</ContextMenu>
				</ListView.ContextMenu>
			</ListView>
		</StackPanel>

		<Grid x:Name="HotkeyTextBox" Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="3" HorizontalAlignment="Stretch" VerticalAlignment="Center">
			<TextBox Width="152" wpf:HintAssist.Hint="Capture hotkey" Style="{DynamicResource MaterialDesignFloatingHintTextBox}"
					 Margin="0" FontSize="14" Text="{Binding CaptureHotkey, ElementName = CaptureViewControl, Mode=OneWay, TargetNullValue=&lt; not set &gt;}" HorizontalAlignment="Left"
					 IsReadOnly="True" IsReadOnlyCaretVisible="False" IsUndoEnabled="False" PreviewKeyDown="HotkeyTextBox_PreviewKeyDown"/>
            <TextBox Width="152" wpf:HintAssist.Hint="Capture time in seconds" Style="{DynamicResource MaterialDesignFloatingHintTextBox}"
					 Margin="0" FontSize="14" Text="{Binding CaptureTimeString, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center"
                     PreviewMouseDown="TextBox_PreviewMouseDown" MouseLeave="TextBox_MouseLeave"/>
            <!--<TextBox Width="152" wpf:HintAssist.Hint="Start delay in seconds" Style="{DynamicResource MaterialDesignFloatingHintTextBox}"
					 Margin="0" FontSize="14" Text="{Binding CaptureStartDelayString, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Right"
                     PreviewMouseDown="TextBox_PreviewMouseDown" MouseLeave="TextBox_MouseLeave"/>-->
            <ComboBox Width="152" Margin="0" materialDesign:HintAssist.Hint="Hotkey sound mode"
					  materialDesign:HintAssist.IsFloating="True" MaxDropDownHeight="200" FontSize="14" 
					  ItemsSource="{Binding SoundModes}" HorizontalAlignment="Right">
                <ComboBox.Text>
                    <Binding Path="SelectedSoundMode"
							 Mode="TwoWay"
							 UpdateSourceTrigger="PropertyChanged">
                    </Binding>
                </ComboBox.Text>
            </ComboBox>
        </Grid>
        <Expander HorizontalAlignment="Stretch" Header="Logger" Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="5">
            <ScrollViewer MaxHeight="200" VerticalScrollBarVisibility="Visible" Margin="20 10 20 10" >
                <TextBlock Text="{Binding LoggerOutput}"/>
            </ScrollViewer>
        </Expander>
    </Grid>
</UserControl>
